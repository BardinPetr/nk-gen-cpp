{% macro proxy(ctx, m) -%}

    {{ method_printer.method_request_type(m) }} req{
            {}, {{ m.arguments | fixed_args | in_args | map(attribute='name') | join(', ') }}
    };
    static {{ method_printer.method_response_type(m) }} res{};

    nk_req_reset(&req);
    nk_req_reset(&res);

    nk_msg_set_method_id(
            &req,
            this->riid,
            {{ ctx.fqn }}_{{ m.name }}_mid
    );
    nk_msg_set_method_id(
            &res,
            this->riid,
            {{ ctx.fqn }}_{{ m.name }}_mid
    );

    nk_msg_set_ncaps(
            &req,
            {{ method_printer.method_request_type(m) }}_handles
    );
    nk_msg_set_ncaps(
            &res,
            {{ method_printer.method_response_type(m) }}_handles
    );

    nk_err_t rc = nk_transport_call(
            &this->transport->base,
            &req.base_,
            nullptr,
            &res.base_,
            nullptr
    );

    static {{ method_printer.response_wrapper_name(m) }} out{
        rc,
        {% for a in m.arguments | out_args | fixed_args %}
            res.{{ a.name }},
        {%- endfor %}
    };

    return out;

{%- endmacro %}
